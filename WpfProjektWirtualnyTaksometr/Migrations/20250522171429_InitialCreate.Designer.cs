// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WpfProjektWirtualnyTaksometr.BazaDanych;

#nullable disable

namespace WpfProjektWirtualnyTaksometr.Migrations
{
    [DbContext(typeof(TaksometrDbContext))]
    [Migration("20250522171429_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("WpfProjektWirtualnyTaksometr.Modele.Auto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rejestracja")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Auta");
                });

            modelBuilder.Entity("WpfProjektWirtualnyTaksometr.Modele.Kierowca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ZdjeciePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Kierowcy");
                });

            modelBuilder.Entity("WpfProjektWirtualnyTaksometr.Modele.Klient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataZamowienia")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MiejsceOdbioru")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MiejsceStartu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Klienci");
                });

            modelBuilder.Entity("WpfProjektWirtualnyTaksometr.Modele.Zlecenie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdresKoncowy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AdresPoczatkowy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Cena")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int>("KierowcaId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Kilometraz")
                        .HasColumnType("REAL");

                    b.Property<int>("KlientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Taryfa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KierowcaId");

                    b.HasIndex("KlientId");

                    b.ToTable("Zlecenia");
                });

            modelBuilder.Entity("WpfProjektWirtualnyTaksometr.Modele.Zlecenie", b =>
                {
                    b.HasOne("WpfProjektWirtualnyTaksometr.Modele.Kierowca", "Kierowca")
                        .WithMany("Zlecenia")
                        .HasForeignKey("KierowcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WpfProjektWirtualnyTaksometr.Modele.Klient", "Klient")
                        .WithMany("Zlecenia")
                        .HasForeignKey("KlientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kierowca");

                    b.Navigation("Klient");
                });

            modelBuilder.Entity("WpfProjektWirtualnyTaksometr.Modele.Kierowca", b =>
                {
                    b.Navigation("Zlecenia");
                });

            modelBuilder.Entity("WpfProjektWirtualnyTaksometr.Modele.Klient", b =>
                {
                    b.Navigation("Zlecenia");
                });
#pragma warning restore 612, 618
        }
    }
}
