// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WpfProjektWirtualnyTaksometr.BazaDanych;

#nullable disable

namespace WpfProjektWirtualnyTaksometr.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250512093236_DodanoDaneStartowe")]
    partial class DodanoDaneStartowe
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("WpfProjektWirtualnyTaksometr.Modele.Kierowca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("statusKierowcy")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Kierowcy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "marek@taksometr.pl",
                            Imie = "Marek Nowicki",
                            IsDeleted = false,
                            Telefon = "111222333",
                            statusKierowcy = 0
                        },
                        new
                        {
                            Id = 2,
                            Email = "piotr@taksometr.pl",
                            Imie = "Piotr Zielinski",
                            IsDeleted = false,
                            Telefon = "444555666",
                            statusKierowcy = 1
                        });
                });

            modelBuilder.Entity("WpfProjektWirtualnyTaksometr.Modele.Klient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Klienci");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adres = "Warszawa",
                            Email = "jan@gmail.pl",
                            Imie = "Jan Kowalski",
                            IsDeleted = false,
                            Telefon = "123456789"
                        },
                        new
                        {
                            Id = 2,
                            Adres = "Krakow",
                            Email = "anna@gmail.pl",
                            Imie = "Anna Nowak",
                            IsDeleted = false,
                            Telefon = "987654321"
                        });
                });

            modelBuilder.Entity("WpfProjektWirtualnyTaksometr.Modele.Pojazd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("KierowcaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumerRejestracyjny")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KierowcaId");

                    b.ToTable("Pojazdy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KierowcaId = 1,
                            Marka = "Toyota",
                            Model = "Corolla",
                            NumerRejestracyjny = "WX12345",
                            VIN = "BR41491BT521F43W3"
                        },
                        new
                        {
                            Id = 2,
                            KierowcaId = 2,
                            Marka = "BMW",
                            Model = "X5",
                            NumerRejestracyjny = "KR98765",
                            VIN = "BR41221DT121F43W3"
                        });
                });

            modelBuilder.Entity("WpfProjektWirtualnyTaksometr.Modele.Przejazd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cena")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int>("KierowcaId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Kilometry")
                        .HasColumnType("TEXT");

                    b.Property<int>("KlientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PunktKoncowy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PunktStartowy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RodzajPlatnosci")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TaryfaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("KierowcaId");

                    b.HasIndex("KlientId");

                    b.HasIndex("TaryfaId");

                    b.ToTable("Przejazdy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cena = 13.00m,
                            Data = new DateTime(2025, 5, 12, 11, 32, 36, 334, DateTimeKind.Local).AddTicks(953),
                            KierowcaId = 1,
                            Kilometry = 5.2m,
                            KlientId = 1,
                            PunktKoncowy = "Dworzec Centralny",
                            PunktStartowy = "Plac Zbawiciela",
                            RodzajPlatnosci = 0,
                            Status = 2,
                            TaryfaId = 1
                        });
                });

            modelBuilder.Entity("WpfProjektWirtualnyTaksometr.Modele.Taryfa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CenaZaKm")
                        .HasColumnType("TEXT");

                    b.Property<string>("TypTaryfa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Taryfy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CenaZaKm = 3.5m,
                            TypTaryfa = "Dzien"
                        },
                        new
                        {
                            Id = 2,
                            CenaZaKm = 6.0m,
                            TypTaryfa = "Noc"
                        },
                        new
                        {
                            Id = 3,
                            CenaZaKm = 8.4m,
                            TypTaryfa = "Swieto"
                        });
                });

            modelBuilder.Entity("WpfProjektWirtualnyTaksometr.Modele.Pojazd", b =>
                {
                    b.HasOne("WpfProjektWirtualnyTaksometr.Modele.Kierowca", "Kierowca")
                        .WithMany("Pojazdy")
                        .HasForeignKey("KierowcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kierowca");
                });

            modelBuilder.Entity("WpfProjektWirtualnyTaksometr.Modele.Przejazd", b =>
                {
                    b.HasOne("WpfProjektWirtualnyTaksometr.Modele.Kierowca", "Kierowca")
                        .WithMany("Przejazdy")
                        .HasForeignKey("KierowcaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WpfProjektWirtualnyTaksometr.Modele.Klient", "Klient")
                        .WithMany("Przejazdy")
                        .HasForeignKey("KlientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WpfProjektWirtualnyTaksometr.Modele.Taryfa", "Taryfa")
                        .WithMany()
                        .HasForeignKey("TaryfaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kierowca");

                    b.Navigation("Klient");

                    b.Navigation("Taryfa");
                });

            modelBuilder.Entity("WpfProjektWirtualnyTaksometr.Modele.Kierowca", b =>
                {
                    b.Navigation("Pojazdy");

                    b.Navigation("Przejazdy");
                });

            modelBuilder.Entity("WpfProjektWirtualnyTaksometr.Modele.Klient", b =>
                {
                    b.Navigation("Przejazdy");
                });
#pragma warning restore 612, 618
        }
    }
}
